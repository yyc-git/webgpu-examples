#version 460
#extension GL_EXT_ray_tracing : require
#pragma shader_stage(raygen)

layout(location = 0) rayPayloadEXT vec3 hitValue;

layout(binding = 0, set = 0) uniform accelerationStructureEXT topLevelAS;

layout(std140, set = 0, binding = 1) buffer PixelBuffer {
  vec4 pixels[];
} pixelBuffer;

void main() {
  const float tMin = 0.1;
  float tMax = 1.0e38f;
  // uint flags = gl_RayFlagsNoneEXT;
  uint flags = gl_RayFlagsOpaqueEXT;

  vec3 origin = vec3(0.0);
  // vec3 rayDir = vec3(0.0);
  vec3 rayDir = vec3(0.2);

  traceRayEXT(topLevelAS, // acceleration structure
              flags,      // rayFlags
              0xFF,       // cullMask
              0,          // sbtRecordOffset
              0,          // sbtRecordStride
              0,          // missIndex
              origin,     // ray origin
              tMin,       // ray min range
              rayDir,     // ray direction
              tMax,       // ray max range
              0           // payload (location = 0)
  );

  const uint pixelIndex =
      gl_LaunchIDEXT.y * gl_LaunchSizeEXT.x + gl_LaunchIDEXT.x;

  pixelBuffer.pixels[pixelIndex] = vec4(hitValue, 1.0);
}